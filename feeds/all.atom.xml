<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Matt Makai</title><link href="http://www.mattmakai.com" rel="alternate"></link><link href="http://www.mattmakai.com/feeds/all.atom.xml" rel="self"></link><id>http://www.mattmakai.com</id><updated>2012-08-22T00:00:00-04:00</updated><entry><title>Introduction to Python for Non-Developers Notes</title><link href="http://www.mattmakai.com/introduction-python-non-developers-notes.html" rel="alternate"></link><updated>2012-08-22T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/introduction-python-non-developers-notes.html</id><summary type="html">&lt;p&gt;Matt Camilli and I gave a
&lt;a class="reference external" href="/presentations/what-is-python-for-everyone.html"&gt;talk Tuesday night&lt;/a&gt;
introducing about 30 non-developers to the Python programming language's
history, philosophy, and differences from other languages, as well as an
industry analysis of companies using Python. Matt Camilli
covered
&lt;a class="reference external" href="/presentations/python101.pptx"&gt;how he learned Python and what great resources exist&lt;/a&gt; out on the web for anyone looking to learn more about the language.&lt;/p&gt;
&lt;p&gt;The topics included the
&lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0020/"&gt;Zen of Python&lt;/a&gt;, the
&lt;a class="reference external" href="http://www.python.org/psf/"&gt;Python Software Foundation&lt;/a&gt;, language
comparison with Excella Consulting other two primarily languages, Java
and .NET, and advantages of Python.&lt;/p&gt;
&lt;p&gt;Paul Graham's &lt;a class="reference external" href="http://www.paulgraham.com/pypar.html"&gt;The Python Paradox&lt;/a&gt;
essay was covered. Paul's
&lt;a class="reference external" href="http://www.paulgraham.com/articles.html"&gt;other essays&lt;/a&gt; are also
fantastic, especially
&lt;a class="reference external" href="http://www.paulgraham.com/makersschedule.html"&gt;Maker's Schedule, Manager's Schedule&lt;/a&gt;, &lt;a class="reference external" href="http://www.paulgraham.com/javacover.html"&gt;Java's Cover&lt;/a&gt;, and
&lt;a class="reference external" href="http://www.paulgraham.com/lies.html"&gt;Lies We Tell Kids&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also covered what companies are using Python, such as &lt;a class="reference external" href="http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances-dozens-of"&gt;Instagram&lt;/a&gt; and
&lt;a class="reference external" href="http://techreport.com/discussions.x/16713"&gt;Google&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks again to everyone who came out to learn more about Python and also
to my partner in crime, Matt Camilli.&lt;/p&gt;
</summary></entry><entry><title>The First Django Website Run On Python 3</title><link href="http://www.mattmakai.com/first-django-website-run-python-3.html" rel="alternate"></link><updated>2012-08-15T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/first-django-website-run-python-3.html</id><summary type="html">&lt;p&gt;The top post on &lt;a class="reference external" href="http://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt; this morning
is about a &lt;a class="reference external" href="http://myks.org/django-python3/"&gt;Django (1.5 development branch) site running on Python 3&lt;/a&gt;.
Why is a Django site running on Python 3 newsworthy? Because while Django
1.5 is tested and supported against Python 2.6 and Python 2.7 (dropping
support for Python 2.5 found in Django 1.4), Python 3 compatibility is a
&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/topics/python3/"&gt;new feature&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Python 3 breaks backwards compatibility with Python 2 to remove the cruft
from years of Python 1 &amp;amp; 2 development syntax. Python 3 is a better language.
But until the vast majority of libraries and frameworks support or move
exclusively to Python 3, Python 2 will continue to be used. Django in
particular is an important project because it is the most widely used Python
framework.&lt;/p&gt;
&lt;p&gt;Python 3 is supported by Django through the
&lt;a class="reference external" href="http://packages.python.org/six/"&gt;six compatibility layer&lt;/a&gt;. It will be
interesting to see how many bugs in advanced Django features come up
throughout the development cycle and whether Python 3 is officially supported
(the current plan) or whether there is a backtrack to unofficial support
for this release to prevent too much of a delay in
&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/releases/1.5/"&gt;releasing version 1.5&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>Steps for Non-Developers to Start an Internet Business</title><link href="http://www.mattmakai.com/steps-non-developers-start-internet-business.html" rel="alternate"></link><updated>2012-08-14T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/steps-non-developers-start-internet-business.html</id><summary type="html">&lt;p&gt;I am often asked by friends and colleagues about what first steps
a non-technical person should take when they come up with ideas and want to
do something with them. I always appreciate these requests since it
provides recognition that I have some insight into software development
in the entrepreneurship and small business space. This is my first attempt to
describe in a blog post what I tell non-developers who ask me for advice.&lt;/p&gt;
&lt;div class="section" id="outline"&gt;
&lt;h2&gt;Outline&lt;/h2&gt;
&lt;p&gt;There's an overwhelming amount of information in the areas of
entrepreneurship and software development. This post is one perspective for
an outline of what you need to know. The goal is to point you in the right
direction so you don't become demotivated while reading endless information.&lt;/p&gt;
&lt;p&gt;The five-part outline described in &lt;a class="reference external" href="http://www.amazon.com/gp/product/B004JXXKR4/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B004JXXKR4&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;The Personal MBA&lt;/a&gt; (highly recommended read)
provides an initial framework for understanding what you need to know about
business. I'll use these five parts to describe what to learn:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Value Creation&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Marketing&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sales&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value Delivery&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Finance&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="value-creation"&gt;
&lt;h2&gt;Value Creation&lt;/h2&gt;
&lt;p&gt;When someone has an idea, they perceive value for themselves or others in the
abstract concept. But there is no way to know whether the implementation of
that idea creates actual value. This is why prototypes, such as screen mockups
using &lt;a class="reference external" href="http://www.balsamiq.com/"&gt;Balsamiq&lt;/a&gt;, and &lt;a class="reference external" href="http://www.startuplessonslearned.com/2009/08/minimum-viable-product-guide.html"&gt;minimum&lt;/a&gt; &lt;a class="reference external" href="http://steveblank.com/2010/03/04/perfection-by-subtraction-the-minimum-feature-set/"&gt;viable&lt;/a&gt;
&lt;a class="reference external" href="http://johnnyholland.org/2012/02/making-sense-of-minimum-viable-products/"&gt;products&lt;/a&gt; are important. The sooner you go from idea to even partially
implemented product, the faster you can get feedback from your target paying
customers as to whether or not your implementation provides value to them.&lt;/p&gt;
&lt;p&gt;Three more concepts are important here. First, does your implementation
solve a real problem? Is the solution a &amp;quot;nice to have&amp;quot; or a &lt;strong&gt;must have now&lt;/strong&gt;
type of product? Don Dodge &lt;a class="reference external" href="http://dondodge.typepad.com/the_next_big_thing/2008/03/does-your-start.html"&gt;covers the &amp;quot;vitamin or painkiller&amp;quot; question&lt;/a&gt;
brilliantly in that post.&lt;/p&gt;
&lt;p&gt;Second, ideas aren't worth anything until they are (well) executed on.
Customers do not pay for an idea, they pay for a product or service that
solves their problem. That's not to say the idea isn't important, it just
means the idea is important &lt;em&gt;in combination&lt;/em&gt; with execution. Here's what
some of the best minds in technology have to say about
&lt;a class="reference external" href="http://www.derekflanzraich.com/2010/08/idea-or-execution/"&gt;idea versus execution&lt;/a&gt;
and another post that takes the hard stand that
&lt;a class="reference external" href="http://www.inc.com/rob-adams/2010/06/ideas-commodity-but-execution-intelligence-matters.html"&gt;your idea doesn't matter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Third, what is it going to take to get you to the point where you can talk
to potential customers? For non-developers, this means putting together
screen mock ups with a tool like Balsamiq or
&lt;a class="reference external" href="https://gomockingbird.com/"&gt;Mockingbird&lt;/a&gt; while &lt;em&gt;also learning how to code&lt;/em&gt;.
There are many reasons for why you should
&lt;a class="reference external" href="http://sachagreif.com/please-learn-to-code/"&gt;learn to code&lt;/a&gt;, but it
primarily boils down to:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Iterating on your working prototype faster based on customer feedback&lt;/li&gt;
&lt;li&gt;Gaining an in-depth understanding your business' operations&lt;/li&gt;
&lt;li&gt;Pitching in with development, especially in the early days, even if you plan to do the customer development while your co-founder builds the site&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you don't want to learn how to code, ask yourself if you really want to
be an entrepreneur in an Internet-based business. Entrepreneurs recognize
that sometimes you've just got to roll up your sleeves and get a job done.
(Likewise, developers must to recognize customer development, marketing,
sales, finance, etc., are &lt;strong&gt;really&lt;/strong&gt; important to a business' success.)
Learning how to code needs its own detailed blog post in the future but I
subjectively recommend &lt;a class="reference external" href="http://python.org/"&gt;Python&lt;/a&gt; and
&lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; as a programming language and
web application framework starting point.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="marketing"&gt;
&lt;h2&gt;Marketing&lt;/h2&gt;
&lt;p&gt;Once you've created a desirable web application based on customer feedback,
marketing becomes a priority for gaining new paying customers. Your first
customers should be the people you worked with to create your product.
Hopefully they are early-adopter evangelists who are willing to both give
you testimonials to put on your website as well as spread the word to
like-minded potential customers.&lt;/p&gt;
&lt;p&gt;There are several resources I have found that were tremendously helpful in
better understanding marketing. First, &lt;a class="reference external" href="http://www.amazon.com/gp/product/0615373968/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0615373968&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;Start Small, Stay Small&lt;/a&gt; provides a
developer-centric perspective on online advertisements, search engine
optimization, and marketing. If you're already a software developer, you
should start with this book. Second, &lt;a class="reference external" href="http://www.amazon.com/gp/product/0684856360/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0684856360&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;Permission Marketing&lt;/a&gt; is a classic marketing
book that discusses the shift from interruption marketing (stopping people
from what they are currently doing) and shifting into a permission marketing
model where potential customers identify that they have the problem you
are solving with your product or service.&lt;/p&gt;
&lt;p&gt;There are a few likely options you will most commonly use to market your
product since your budget for marketing is going to be limited.&lt;/p&gt;
&lt;p&gt;1. &lt;strong&gt;Blog posts&lt;/strong&gt;, along with proper &lt;a class="reference external" href="ttp://www.amazon.com/gp/product/B0043D2E7W/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B0043D2E7W&amp;amp;linkCode=as2&amp;amp;tag=minimneeds-20"&gt;Search Engine Optimization&lt;/a&gt; (SEO), also known as
organic search results. These should be really high quality content blog
posts that are exactly what your target demographic would be looking for
when they have the problem your product solves.&lt;/p&gt;
&lt;p&gt;2. &lt;strong&gt;Email lists&lt;/strong&gt;. Targeted lists of people who are interested in the problem
space both in and around the area your product solves.&lt;/p&gt;
&lt;p&gt;3. &lt;strong&gt;Adwords&lt;/strong&gt;. Ads that appear next to search results in Google. For people
who are searching but do not necessarily hit your blog posts.&lt;/p&gt;
&lt;p&gt;Together these three approaches help form the basis for your initial
low-budget marketing efforts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sales"&gt;
&lt;h2&gt;Sales&lt;/h2&gt;
&lt;p&gt;Sales is different from marketing. Marketing is getting potential customers
to know about your product and getting them to your site. Sales is moving a
visitor to your site from a potential customer into a paying customer.&lt;/p&gt;
&lt;p&gt;Sales involves concepts such as &lt;a class="reference external" href="http://www.contrast.ie/blog/designing-your-sign-up-page/"&gt;designing your sales page&lt;/a&gt;, performing A/B optimization testing,
studying and &lt;a class="reference external" href="http://conversionxl.com/pricing-experiments-you-might-not-know-but-can-learn-from/"&gt;trying sales experiments&lt;/a&gt; to see if they convert more
potential customers into paying customers, and &lt;a class="reference external" href="http://www.problogger.net/archives/2010/12/20/how-to-optimize-your-sales-funnel-for-success/"&gt;tweaking your sales funnel&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The sales funnel is an important concept and it should be baked into analytics
that are used on the site, such as &lt;a class="reference external" href="https://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt;, &lt;a class="reference external" href="https://mixpanel.com/"&gt;MixPanel&lt;/a&gt;, &lt;a class="reference external" href="http://www.kissmetrics.com/"&gt;KISSmetrics&lt;/a&gt;,
and home-grown analytics solutions. More on analytics in a future post as
well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="value-delivery"&gt;
&lt;h2&gt;Value Delivery&lt;/h2&gt;
&lt;p&gt;Once you've sold a product or service to a customer you must make sure it
is satisfying their needs and they feel they are getting what they paid for.
This is the customer development process continued. Value delivery involves
collecting, analyzing, and acting on data about how your customers use
your product or service. In addition, directly talking to a broad swath of
users to determine what other problems they have that can be solved with an
expansion of your business.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="finance"&gt;
&lt;h2&gt;Finance&lt;/h2&gt;
&lt;p&gt;Finance involves running a profitable and cash-flow positive business as
well as performing accounting. Software such as &lt;a class="reference external" href="http://www.xero.com/"&gt;Xero&lt;/a&gt;,
&lt;a class="reference external" href="http://www.freshbooks.com/"&gt;FreshBooks&lt;/a&gt;, and &lt;a class="reference external" href="http://quickbooksonline.intuit.com/"&gt;QuickBooks Online&lt;/a&gt; are a boon to Internet-based businesses and
well-worth the monthly fee once the business is launched with customers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="misc"&gt;
&lt;h2&gt;Misc&lt;/h2&gt;
&lt;p&gt;There are a couple other misc notes I wanted to mention that did not directly
fall into the above categories.&lt;/p&gt;
&lt;p&gt;Getting legal advice from an actual lawyer matters once you get off the
ground. Don't worry too much about it until you have momentum behind you.
I found this laywer's
&lt;a class="reference external" href="http://thestartuplawyer.com/startup-issues/if-i-launched-a-startup"&gt;list of what he would do when starting a start up&lt;/a&gt; to be insightful at least to
get an overview of the concepts.&lt;/p&gt;
&lt;p&gt;Also, reading sources such as &lt;a class="reference external" href="http://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt;,
and &lt;a class="reference external" href="http://www.kalzumeus.com/"&gt;Patrick McKenzie's blog&lt;/a&gt;
can help to identify new subjects to learn.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;There's &lt;strong&gt;a lot&lt;/strong&gt; to learn and it can be overwhelming. In some ways having
an outline is a downside because you realize how far you have to go. But it
also helps to prevent blindspots in your knowledge map of what you need
to know.&lt;/p&gt;
&lt;p&gt;I'm sure I missed many areas. Message me on Twitter &amp;#64;makaimc to let me know
what else needs to be added to this outline for non-developers as I also
work on expanding each point into its own blog post.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>A Fascinating Post on Curiousity's Software</title><link href="http://www.mattmakai.com/fascinating-post-curiositys-software.html" rel="alternate"></link><updated>2012-08-13T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/fascinating-post-curiositys-software.html</id><summary type="html">&lt;p&gt;I found this &lt;a class="reference external" href="http://jlouisramblings.blogspot.com/2012/08/getting-25-megalines-of-code-to-behave.html"&gt;blog post on Curiosity's hardware and software&lt;/a&gt; to
be a fascinating read. The Curiosity rover has 2.5 million lines of C code
running on custom radiation and extreme temperature hardened computer systems.
The author presents his view as an Erlang programmer of how the systems are
designed to be as fault-proof as possible.&lt;/p&gt;
</summary></entry><entry><title>Big Questions in Tech</title><link href="http://www.mattmakai.com/big-questions-in-tech.html" rel="alternate"></link><updated>2012-07-28T11:39:39-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/big-questions-in-tech.html</id><summary type="html">&lt;ol class="arabic simple"&gt;
&lt;li&gt;Mobile&lt;/li&gt;
&lt;li&gt;SaaS&lt;/li&gt;
&lt;li&gt;Client side frameworks&lt;/li&gt;
&lt;/ol&gt;
</summary></entry><entry><title>The Seven Most Important Principles I've Learned About Design</title><link href="http://www.mattmakai.com/the-seven-most-important-principles-ive-learned-about-design.html" rel="alternate"></link><updated>2012-07-28T11:39:39-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/the-seven-most-important-principles-ive-learned-about-design.html</id><summary type="html">&lt;ol class="arabic simple"&gt;
&lt;li&gt;CRAP (Contrast, Repetition, Alignment, and Proximity) Matters&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2. Use similar style serif and sans serif fonts together
Serif is better for blocks of text, while sans serif is perfect for
headings.&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.bootstrappingdesign.com/"&gt;Bootstrapping Design&lt;/a&gt; is a
fantastic book for learning design.&lt;/li&gt;
&lt;/ol&gt;
</summary></entry><entry><title>Spreadsheets As A Beachhead</title><link href="http://www.mattmakai.com/spreadsheets-as-beachhead.html" rel="alternate"></link><updated>2012-07-14T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/spreadsheets-as-beachhead.html</id><summary type="html">&lt;p&gt;Spreadsheets represent a need by the business to solve a data-related
problem in a structured manner. Looking for spreadsheets that run
business-critical operations is an opportunity to build a system that
replaces an ad hoc bunch of columns with a normalized, scalable database.
This opportunity holds regardless of whether you're an employee of that
organization or a consultant.&lt;/p&gt;
</summary></entry><entry><title>My Favorite Django Article Sources</title><link href="http://www.mattmakai.com/favorite-django-article-sources.html" rel="alternate"></link><updated>2012-06-22T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/favorite-django-article-sources.html</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.yipit.com/"&gt;yipit tech blog&lt;/a&gt;:
Yipit is a tech start up in New York specializing in daily deals. Their
platform is built on Python/Django and they write a lot of detailed
posts on topics such as how they set up their configuration management
and what to watch for when upgrading from Django 1.3.1 to 1.4.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.reddit.com/r/django"&gt;Django subreddit&lt;/a&gt;:
The Django subreddit often rolls up lesser-known blogs that have interesting
technical posts.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lincolnloop.com/blog/categories/django/"&gt;Lincoln Loop django tagged posts&lt;/a&gt;:
Lincoln Loop is a consulting practice based on user experience and building
services with the Python/Django stack. They write about a range of technical
topics but their Django specific posts are tagged with 'django'.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.askthepony.com/blog/"&gt;Ask the Pony blog&lt;/a&gt;:
A weekly updated blog, but unfortunately it seems to have gone silent
since August of 2011. Still some great existing posts on the site.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pydanny.com/"&gt;Pydanny's blog&lt;/a&gt;:
Daniel Greenfield (PyDanny) is an influential developer and blogger in
the Python world. He writes on general Python subjects as well as specific
Django topics of interest.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Fabric Function For Rebuilding a Django MySQL Database</title><link href="http://www.mattmakai.com/fabfile-function-rebuilding-django-mysql-database.html" rel="alternate"></link><updated>2012-06-12T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/fabfile-function-rebuilding-django-mysql-database.html</id><summary type="html">&lt;p&gt;This is a very specific blog post on what my Fabric fabfile.py looks
like for rebuilding my database. This is particularly useful early in
a project lifecycle before I start using South for database migrations
and instead I am building new tables and columns at a fast clip.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;def rebuild_db():
  run(&amp;#39;mysql -u %s -p%s -e &amp;quot;drop database if exists %s&amp;quot;&amp;#39; % (env.db_user,
    env.db_passwd, env.db_schema))
  run(&amp;#39;mysql -u %s -p%s -e &amp;quot;create database %s&amp;quot;&amp;#39; % (env.db_user,
    env.db_passwd, env.db_schema))
  virtualenv(&amp;#39;python %smanage.py syncdb --noinput&amp;#39; % \
    env.deploy_dir)
  virtualenv(&amp;#39;python %smanage.py loaddata %s/core/&amp;#39; +
    &amp;#39;fixtures/test.json&amp;#39; % (env.deploy_dir, env.deploy_dir))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A few notes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You should define env.db_user, env.db_passwd, env.db_schema,
env.deploy_dir in your fabfile before calling this function.&lt;/li&gt;
&lt;li&gt;I put my main test.json fixture under a &amp;quot;core&amp;quot; app directory. Parameterize
these settings if your project structure differs.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Recent Python Posts</title><link href="http://www.mattmakai.com/recent-python-posts.html" rel="alternate"></link><updated>2012-05-27T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/recent-python-posts.html</id><summary type="html">&lt;p&gt;I recently read and enjoyed the following Python blog posts (in no
particular order).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://me.veekun.com/blog/2012/05/23/python-faq-descriptors/"&gt;Python FAQ: Descriptors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.mikkolehtinen.com/blog/2012/05/25/rewindy-tech-stack/"&gt;Backbone/Python Tech Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python.org/release/3.1.5/howto/advocacy.html"&gt;Python Advocacy How To&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://satyajit.ranjeev.in/2012/05/17/python-a-few-things-to-remember.html"&gt;A Few Things to Remember While Coding in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lukeplant.me.uk/blog/posts/some-quick-django-optimisation-lessons/"&gt;Some quick Django optimisation lessons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>RFP Bullshit</title><link href="http://www.mattmakai.com/government-rfp-bullshit.html" rel="alternate"></link><updated>2012-05-25T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/government-rfp-bullshit.html</id><summary type="html">&lt;p&gt;Request For Proposals (RFPs) in the government are so heavily tilted towards
&lt;a class="reference external" href="http://www.boozallen.com/"&gt;big&lt;/a&gt;
&lt;a class="reference external" href="http://www.lockheedmartin.com/"&gt;lumbering&lt;/a&gt;
&lt;a class="reference external" href="http://www.saic.com/"&gt;companies&lt;/a&gt;* that government uses a
&amp;quot;small business only&amp;quot; category to get companies with less than $25 million
in revenue into the bidding process.&lt;/p&gt;
&lt;p&gt;In an RFP, you generally lay out your recommended approach to solving
the problem(s) the agency states it has. You then show how you've solved
similar problems in the past by embellishing your accomplishments. This is
where the RFP process is bullshit. The government should ask for all the
similar ways in which you've &lt;em&gt;screwed up&lt;/em&gt; in the past. That would balance
out the fact that most of the companies have messed things up so badly,
(&lt;a class="reference external" href="http://www.fiercegovernmentit.com/story/fbi-puts-sentinel-hold/2010-03-21"&gt;for example, Sentinel&lt;/a&gt;) that they don't actually have more experiences
solving the problem than most small businesses.&lt;/p&gt;
&lt;p&gt;Of course this doesn't really solve the problem because large firms have
plenty more advantages, such as connections, money, name recognition, etc,
but it seems like stating your failures with the successes in the RFP
would be a nice change to the process.&lt;/p&gt;
&lt;p&gt;* These are just a sample of the massive corporations I'm talking about.
Also I used to work for Booz Allen so I am not exempt from this rant.&lt;/p&gt;
</summary></entry><entry><title>wget and Proxy Servers</title><link href="http://www.mattmakai.com/wget-proxy-servers.html" rel="alternate"></link><updated>2012-05-24T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/wget-proxy-servers.html</id><summary type="html">&lt;p&gt;Short answer: before you use wget, specify
'export http_proxy=my.proxy.server:port' then wget will use the proxy.&lt;/p&gt;
&lt;p&gt;I needed to grab some files with wget while working on a Linux server I was
setting up for a Django deployment. Unfortunately, I was behind a firewall
and had to use a specific proxy for HTTP connections.&lt;/p&gt;
&lt;p&gt;pip makes it easy, just do 'pip install --proxy my.proxy.server:8080 packages'
and I figured wget would have the same commandline argument to specify a
proxy. No such luck.&lt;/p&gt;
&lt;p&gt;I found the following link that specified
&lt;a class="reference external" href="http://www.linuxquestions.org/questions/linux-software-2/wget-with-proxy-276075/"&gt;'man wget' as the answer&lt;/a&gt; unhelpful (and a dick answer anyway).&lt;/p&gt;
&lt;p&gt;So for future reference, 'export http_proxy=my.proxy.server:port', will
specify a proxy server to use with wget. I also found
&lt;a class="reference external" href="http://www.gnu.org/software/wget/manual/html_node/Proxies.html"&gt;this proxies link&lt;/a&gt;
useful as well.&lt;/p&gt;
</summary></entry><entry><title>Death By a Thousand Good Intentions</title><link href="http://www.mattmakai.com/death-by-thousand-good-intentions.html" rel="alternate"></link><updated>2012-05-23T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/death-by-thousand-good-intentions.html</id><summary type="html">&lt;p&gt;In all the government and large commerical environments I've worked in that
I can't seem to get much done compared to what I am capable of because I
am constantly facing blockers. I don't think anyone is deliberately trying
to stop me from developing quality software. But there's a whole lot of
good intentions flying around by people who don't know the full impact
of what they are talking about.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;
If security creates The security guys down the hall that won't let a
server have an open HTTP connection? You're killing my ability to use
Python Package Index (PIP) installations. Is there a way around this so
I can use HTTPS instead? Sure. But it may take me hours to figure it out.
It'll be non-standard. I have to teach every developer around me why we
have to do it a way they've never seen before. This takes time. Time away
from me developing that great new functionality you want.&lt;/p&gt;
&lt;p&gt;Another example. I need to use a virtual private connection to get on your
network? I have to use Citrix's terrible SmarTerm program instead of putty
or my usual Linux shell? I'm going to be slower because I'm not using
programs I'm comfortable with. Can I get the job done? Sure. But again this
takes time. Time away from developing actual software.&lt;/p&gt;
&lt;p&gt;Another example. I don't have access privileges to servers for two weeks
until after I arrive on my first day. Let's say I'm hypothetically getting
$125 an hour (I'm throwing this ballpark figure out - it's not what is
in the contract). 8 hrs a day * 10 days = 80 hours, 80 * 125 = $10000.
You just spent $10k getting little or nothing because I didn't have access.
I'm sure there's a good reason why security needed to manually approve
all those access privileges. Or not. But it cost $10k for that good reason.
Is no one watching those things?&lt;/p&gt;
&lt;p&gt;Add a thousand of these little good intentions by security, program
management, audit, legal, HR, etc etc, and you get virtually nothing.
It's amazing anything gets done at all in bureaucracies. All because everyone
is preventing great work from getting done due to &amp;quot;good intentions.&amp;quot;&lt;/p&gt;
&lt;p&gt;Rant over.&lt;/p&gt;
</summary></entry><entry><title>Recent Design Books</title><link href="http://www.mattmakai.com/recent-design-books.html" rel="alternate"></link><updated>2012-05-22T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/recent-design-books.html</id><summary type="html">&lt;p&gt;I recently purchased and read two design books,
&lt;a class="reference external" href="http://bootstrappingdesign.com/"&gt;Bootstrapping Design&lt;/a&gt; by Jarrod Drysdale
and
&lt;a class="reference external" href="http://sachagreif.com/ebook/"&gt;Step by Step UI Design&lt;/a&gt; by Sacha Greif. Both
books came out around the same time and were on the front page of Hacker News,
so they are linked in my brain and probably many other people's minds. I felt
I got a lot of value out of each book and for different reasons. If I
had to do it over again, I would still purchase both.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bootstrapping Design&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bootstrapping Design had a lot of specific advice for web application
designers. In particular, the chapters on typography and color were fantastic.
The typography advice on using a sans serif font for headlines and a serif
font for block text really improved my designs (which need to be incorporated
into this blog). The advice on choosing one color to start with and then
using a second color sparingly really helped get me past that initial hurdle
of uncertainty around picking color schemes.&lt;/p&gt;
&lt;p&gt;I've read the CRAP (Contrast, Repetition, Alignment, and Proximity) principles
before, so I had a general understanding of how to use them in good design.
Bootstrapping Design presented specific tips on how to handle each of these
principles in practice, which is often lacking from other books.&lt;/p&gt;
&lt;p&gt;Overall there were only two areas I could see improvement in this book. First,
incorporating a complete example (similar to how Step by Step UI Design
is presented) at the end of the book that reinforces the tips presented.
Second, the advice and tips presented were so useful I found myself saying,
&amp;quot;I really want more advice like this.&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step by Step UI Design&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Step by Step UI Design presents a complete example from start to finish of
a web application screen design. A Photoshop PSD is included in the deluxe
package of the book (I purchased this deluxe version). I found the PSD
useful while going through the book although I'm on the fence as to whether
I would spend the extra money for it if I had to do it over again.&lt;/p&gt;
&lt;p&gt;What I really liked about this book was that it was very practical and
focused on creating a single web application screen. The explanations
behind why certain design decisions were made opened
up the curtain as to what goes on in a designers' mind during the creation
process. As a software developer but non-design expert, the logical,
rational look at the process greatly appealed to my analytical method of
thinking.&lt;/p&gt;
&lt;p&gt;I found the book short enough to read in a single sitting. It is worth
several read-throughs simply because it is difficult to assimilate all the
details at once. When Step by Step UI Design is combined with Sacha's recent
&lt;a class="reference external" href="http://sachagreif.com/the-toolbox-from-idea-to-launch-in-10-hours/"&gt;post on the 10 hours it took to create The Toolbox&lt;/a&gt;  it provides a complete picture
of how to both come up with an idea, design it, and execute it quickly.&lt;/p&gt;
&lt;p&gt;Overall I am very pleased I purchased both of these design books. I recommend
them to fellow software developers who want to improve their design
thinking and have a more comfortable grasp on the design process.&lt;/p&gt;
</summary></entry><entry><title>Advice to College Graduates</title><link href="http://www.mattmakai.com/advice-college-graduates.html" rel="alternate"></link><updated>2012-05-17T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/advice-college-graduates.html</id><summary type="html">&lt;p&gt;A couple of weekends ago, I watched my little brother Luke graduate from
&lt;a class="reference external" href="http://www.jmu.edu/"&gt;JMU&lt;/a&gt;. Dr. Rose, the outgoing President of JMU gave
the commencement address. I've attended &lt;a class="reference external" href="http://www.jmu.edu/"&gt;enough&lt;/a&gt;
&lt;a class="reference external" href="http://www.vt.edu/"&gt;graduation&lt;/a&gt; &lt;a class="reference external" href="http://www.virginia.edu/"&gt;ceremonies&lt;/a&gt;
to know that most of them sound the same and this speech by Dr. Rose was
no different. There is usually a whole lot of &amp;quot;be different&amp;quot; and &amp;quot;work hard&amp;quot;
with a lot of rah-rah and the occasional funny story thrown in.&lt;/p&gt;
&lt;p&gt;Tradition runs through all aspects of our higher education system and maybe
that's why most graduation speeches sound the same. But I believe that is a
disservice to undergraduates who are about to get a major shock when they
jump into the real world. So here are the key points I'd use in a speech.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;No one &amp;quot;owes&amp;quot; you anything&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sure, you have a college degree from a &amp;quot;prestigious&amp;quot; university. So does
everyone else you're competing with. If you're from a privileged upper
middle class existence like me, you've been told how wonderful you are all
your life. Let's get it straight right now, &lt;em&gt;you don't matter for shit.&lt;/em&gt;
Once you accept that fact, you can begin to figure out how you actually
can build yourself into something that does matter to other people. You can
figure out how to make real a difference in the world. But before you figure
out how to make a difference...&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;&lt;strong&gt;Work like you have a chip on your shoulder&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Your first job out of college will have a lot of meaningless tasks thrown
at you. Work on them fervently and with passion. Learn everything you can
as quickly as possible and deliver great results, even if the tasks seem
&amp;quot;meaningless.&amp;quot; People will take note. They will give you more responsibility.
You will continue to learn and expand your horizon.&lt;/p&gt;
&lt;p&gt;Don't listen to people who tell you to slow down. Remember that
&lt;a class="reference external" href="http://sivers.org/kimo"&gt;there is no speed limit&lt;/a&gt;. Ignore anyone
that tells you that you are going to burn out or can't do it. Do you truly
want to work full-time and go to graduate school at the same time while
still enjoying yourself and meeting new people? Do it. Do everything with
a ferocity and determination. Once you can throw yourself into anything and
succeed...&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;&lt;strong&gt;Figure out how you will truly add value&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once you realize no one owes you anything and you decide to work with a
passionate intensity regardless of the tasks, figure out where you want
to add value. What's value? I highly recommend reading
&lt;a class="reference external" href="http://www.amazon.com/gp/product/1591843529/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=minimneeds-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=1591843529"&gt;The Personal MBA by Josh Kauffman&lt;/a&gt;. Whether you want to start your own business,
work in an existing corporation, or freelance with consulting work, that
book will help you put a framework around what you want to do with your
professional life.&lt;/p&gt;
&lt;p&gt;Those are the three main professional points of advice I give to any
college grad who wants to succeed and be happy in the real world. That isn't
&lt;em&gt;everything&lt;/em&gt; you need to know, but it will ultimately lead you in the
right professional direction.&lt;/p&gt;
</summary></entry><entry><title>Stanford's CS183 Class Notes</title><link href="http://www.mattmakai.com/stanford-cs-183-class-notes.html" rel="alternate"></link><updated>2012-05-09T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/stanford-cs-183-class-notes.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://blakemasters.tumblr.com/peter-thiels-cs183-startup"&gt;Stanford's CS183 class with Peter Thiel&lt;/a&gt; is simply amazing. A &lt;em&gt;huge&lt;/em&gt; thank you to Blake Masters
for writing up summaries of each class. Every class notes post I have read
has been amazingly insightful. I highly recommend checking it out if you
are interested in how technology is shaping the world and learning about
entrepreneurship from some of the major Silicon Valley investors.&lt;/p&gt;
</summary></entry><entry><title>Big Data Presentation</title><link href="http://www.mattmakai.com/big-data-presentation.html" rel="alternate"></link><updated>2012-05-07T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/big-data-presentation.html</id><summary type="html">&lt;p&gt;Over the weekend I finished up the
&lt;a class="reference external" href="/presentations/what-is-big-data.html"&gt;big data presentation&lt;/a&gt; that I am
presenting to Excella's Business Intelligence Center of Excellence this
evening at 530pm.&lt;/p&gt;
&lt;p&gt;I prefer my presentations minimal to keep them as an aid
to my talk (instead of reading from the slides). Therefore it may be hard
to follow unless you actually hear the talk. Nevertheless, the slides are
there and present one view of this whole &amp;quot;big data&amp;quot; concept that seems to
be hyped up everywhere now.&lt;/p&gt;
</summary></entry><entry><title>Screencasting on Mac OS X</title><link href="http://www.mattmakai.com/screencasting-software-for-mac-os-x.html" rel="alternate"></link><updated>2012-05-04T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/screencasting-software-for-mac-os-x.html</id><summary type="html">&lt;p&gt;I recently took a look at the range of screencasting software available
on Mac OS X for a couple of reasons. First, I want to have an easy way
of demoing software and uploading videos to Vimeo. Second, short
screencasts like the ones provided by
&lt;a class="reference external" href="http://www.teamtreehouse.com/"&gt;Treehouse&lt;/a&gt; (highly recommended site
for learning programming and web design by the way), are a great way to
help others learn new technologies. For example, yesterday I helped a
coworker set up static file serving from the Django built-in server used
for development. He was really close and just needed a few lines of code
to get it working. Blog posts are good for when you're searching for a
quick fix, but a short screencast that walks you through the whole process
is great too. So those scenarios are my basic use cases for screencasting.
Also, I don't mind paying for great software since I plan to use it almost
every day.&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;I downloaded and tried the following options:&lt;/dt&gt;
&lt;dd&gt;&lt;ol class="first last arabic simple"&gt;
&lt;li&gt;Quicktime Pro (built into Mac OS X) - free&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.shinywhitebox.com/ishowu-hd/"&gt;iShowU HD&lt;/a&gt; - $60 (for Pro)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.syniumsoftware.com/screenium/"&gt;Screenium&lt;/a&gt; - $40&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.telestream.net/screen-flow/"&gt;ScreenFlow&lt;/a&gt; - $99&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Here's what I thought of each product.&lt;/p&gt;
&lt;p&gt;I couldn't figure out how to get Quicktime Pro to both record the screen
and my microphone at the same time. I'm sure it's possible and I read you
can just record separately and put both of them together in iMovie but
I found that onerous. Scratch this one for serious screencasting.&lt;/p&gt;
&lt;p&gt;I really liked iShowU HD's feature for showing what you're typing on the
screen. I found it very slick and helpful to people watching the video. My
only hang up with it was that if I mistyped and was too slow in catching
myself, iShowU HD thought I was typing a separate block of text instead
of continuing with the existing line. Basically I needed to not make as
many mistakes - probably a good thing. I also liked that I could record
only a piece of the screen instead of recording the whole screen and editing
it later. The major downside to iShowU HD was that it did not have any
editing capabilities after the video was finished. I know I could use
iMovie or something like that but I prefer just staying in the program and
doing my work from there.&lt;/p&gt;
&lt;p&gt;Speaking of editing within the program, both Screenium and ScreenFlow
provide both recording and editing parts to the programs. This was
very appealing to me. I played around with Screenium and subjectively I
liked parts of it but did not like others. I created a couple of
short screencasts with Screenium and then did the same with ScreenFlow.
I felt like ScreenFlow just jived better with what I was trying to do
and was easier to use. The difference in price did not matter to me. I
have not gone ahead and purchased ScreenFlow but I plan to within the next
few days. My recommendation is if you want screencasting software with
editing capabilities, try both Screenflow and Screenium and see which one
fits you better.&lt;/p&gt;
&lt;p&gt;One last note: some of these products are now on the Mac App Store. I read
some pretty scathing reviews that the software did not work as well when
purchased from there. This may be becasue the software is new to the App
Store and it will get better. But do your due diligence to make sure you
do not end up with a neutered product due to the API limitations placed
on apps in the Mac OS X App Store.&lt;/p&gt;
</summary></entry><entry><title>Can't &amp;quot;Find&amp;quot; Developers? Increase Your Offer</title><link href="http://www.mattmakai.com/pay-for-developers.html" rel="alternate"></link><updated>2012-05-03T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/pay-for-developers.html</id><summary type="html">&lt;p&gt;This little
&lt;a class="reference external" href="http://www.irrlicht3d.org/pivot/entry.php?id=1295"&gt;rant about paying developers what the market demands instead of complaining you can't find them&lt;/a&gt;
climbed its way up to the top of the
&lt;a class="reference external" href="http://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt; charts this morning and for
good reason. While the blog post was written specifically for the Austrian
market, great software developers are in high demand everywhere.&lt;/p&gt;
&lt;p&gt;There is a limited supply of people with development skills. When
software developers' skills are used properly, there is great potential
for creating value in organizations ranging from startups to large
government and commercial organizations. I've seen many organization make
the mistake of paying as little as possible for their developers. That
is a losing strategy (one I often come into to try to fix - although
usually by then the organization is dug in too deep and is too far behind
the competition for it to matter).&lt;/p&gt;
&lt;p&gt;Great developers know their worth. They will seek out environments where
either the salary is high enough that they feel they are adequately
paid or compensated with a mix of salary, equity, and benefits. If you're
not able to &amp;quot;find&amp;quot; developers, increase your offer in salary, vacation
days, or some other compensation, such as 20% time for side projects.&lt;/p&gt;
</summary></entry><entry><title>MongoDB, node.js, and Backbone.js</title><link href="http://www.mattmakai.com/mongodb-nodejs-backbonejs.html" rel="alternate"></link><updated>2012-05-02T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/mongodb-nodejs-backbonejs.html</id><summary type="html">&lt;p&gt;The concept of an all-JavaScript stack on both the client and server is
hardly new, but I'm finding the idea more appealing now that the projects
have matured. I see notifications like this
&lt;a class="reference external" href="http://www.marketwatch.com/story/10gen-committed-to-making-mongodb-de-facto-data-store-for-nodejs-applications-2012-04-25"&gt;press release by 10gen&lt;/a&gt;
that they are making a commitment to better integration with node.js.
Granted it is a press release, but I do see the effort 10gen is putting in
through the new tutorials and code releases for MongoDB.&lt;/p&gt;
&lt;p&gt;Python and Django continue to be my day job technologies of choice. They are
great for quickly building web applications. Python and Django are still
fun and productive. But it feels like there's an industry shift going on
that will continue to provide fuel to the all- or mostly-JavaScript stack.&lt;/p&gt;
&lt;p&gt;So I am starting a new side project with &lt;a class="reference external" href="http://www.mongodb.org/"&gt;MongoDB&lt;/a&gt;,
&lt;a class="reference external" href="http://nodejs.org/"&gt;node.js&lt;/a&gt;, and
&lt;a class="reference external" href="http://documentcloud.github.com/backbone/"&gt;Backbone.js&lt;/a&gt;. I know what the
project will be but I am not yet sure if I will just open source it or
make it a pay-for access web application.&lt;/p&gt;
&lt;p&gt;What do I currently find appealing about learning the
MongoDB/node.js/Backbone.js stack (there must be a better name for this
similar to the LAMP stack)?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Mastering JavaScript fundamentals&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Although I've written plenty of JQuery and standard JavaScript code,
I still don't feel like I &amp;quot;get it&amp;quot; when it comes to JavaScript fundamentals.
Part of learning this stack is figuring out how to do JavaScript the right
way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Comparing a traditional LAMP stack with the node.js stack&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Non-blocking I/O on node.js sounds like it makes sense. But what does it
really mean when you get into the details? What are the real implications
for coding fast web applications? I'm curious to learn more about how
this works.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Is it fun?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As I wrote above, programming in Python/Django is &lt;em&gt;fun&lt;/em&gt;. Way more fun than
the Java code I used to write. I still cringe when thinking about how damn
difficult it was to write a web application in Struts. So will writing a
web application in node.js with a NoSQL MongoDB backend and a client-side
MVC framework be fun? I just don't know until I write a project with these
technologies.&lt;/p&gt;
</summary></entry><entry><title>Django Officially On Github</title><link href="http://www.mattmakai.com/django-on-github.html" rel="alternate"></link><updated>2012-04-28T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/django-on-github.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;, the web application framework
for perfectionists with deadlines, is now
&lt;a class="reference external" href="https://groups.google.com/forum/?fromgroups#!topic/django-developers/9--P57ezyBs"&gt;officially on Github&lt;/a&gt;. Welcome Django, it's about time you migrated
over!&lt;/p&gt;
&lt;p&gt;The code and documentation can now be found in the
&lt;a class="reference external" href="https://github.com/django/django"&gt;official repository&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>Database Backups</title><link href="http://www.mattmakai.com/database-backups.html" rel="alternate"></link><updated>2012-04-27T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/database-backups.html</id><summary type="html">&lt;p&gt;Backing up your databases on a daily, or more preferrably, hourly basis is
IMPORTANT. Do not skimp on preserving your data.&lt;/p&gt;
&lt;p&gt;You never know when an errant &amp;quot;drop database ...&amp;quot; will screw up your afternoon.
Even the fantastic developers at
&lt;a class="reference external" href="https://github.com/blog/744-today-s-outage"&gt;Github are not immune&lt;/a&gt; to making
costly mistakes.&lt;/p&gt;
&lt;p&gt;Don't tempt fate. Back up your database frequently.&lt;/p&gt;
</summary></entry><entry><title>Python &amp;amp; MongoDB News</title><link href="http://www.mattmakai.com/python-mongodb-news.html" rel="alternate"></link><updated>2012-04-24T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/python-mongodb-news.html</id><summary type="html">&lt;p&gt;Yesterday had a couple of interesting Python &amp;amp; MongoDB related posts on
&lt;a class="reference external" href="http://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first post was on
&lt;a class="reference external" href="http://isbullsh.it/2012/04/Web-crawling-with-scrapy/"&gt;scrapping websites with scrapy and storing the data in MongoDB&lt;/a&gt;. The post walks through establishing
the URL patterns to crawl then shows an example of how to set up the
MongoDB mapping in a .py file.&lt;/p&gt;
&lt;p&gt;The second post showed the results of a project to
&lt;a class="reference external" href="http://thomasst.ch/mongoadmin/"&gt;recreate the Django admin interface with Twitter Bootstrap for MongoDB backends&lt;/a&gt;. I've worked on several projects where
using MongoDB with Django would have been advantageous but recreating the
admin interface was a significant hurdle. It's great to see community projects
that break down these barriers.&lt;/p&gt;
&lt;p&gt;Hopefully future Django releases can incorporate some of this work to
make it easier to work with non-relational databases when necessary.&lt;/p&gt;
</summary></entry><entry><title>Consolidation in the Python Hosting Industry</title><link href="http://www.mattmakai.com/consolidation-python-hosting-industry.html" rel="alternate"></link><updated>2012-04-19T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/consolidation-python-hosting-industry.html</id><summary type="html">&lt;p&gt;The announcement yesterday about
&lt;a class="reference external" href="https://www.ep.io/blog/epio-closing-down/"&gt;Epio closing down&lt;/a&gt;
got me thinking about the Python PaaS industry. I did not have any personal
experience with Epio, but from the
&lt;a class="reference external" href="http://news.ycombinator.com/item?id=3860196"&gt;discussion on Hacker News&lt;/a&gt;
it sounded like these guys were top notch developers and just nice guys
in general. While it's difficult to see Epio's platform close down after
all the effort invested in it, I'm sure those guys will end up in a great
place. If they didn't already have multiple great job offers I'd be shocked.&lt;/p&gt;
&lt;p&gt;I've only personally used Google App Engine, Heroku, and Gondor PaaS,
Amazon Web Services IaaS, and Slicehost and Linode for virtual private
servers. I currently use Linode (for my side business) and Amazon Web Services  (for this blog plus side projects).&lt;/p&gt;
&lt;p&gt;Linode is great, especially when combined with Ubuntu images along with
Fabric and cuisine for server set up. Amazon Web Services is also a fantastic
platform when &lt;a class="reference external" href="https://github.com/boto/boto"&gt;boto&lt;/a&gt; is used to automate
EC2, S3, etc. Right now I'm very happy with the combination of those two
services.&lt;/p&gt;
&lt;p&gt;A few years ago I worked with Google App Engine both on side projects and
some client projects. I still have a certain gut reaction when I think about
using GAE. I liked the ease of deployment and the tie in to the Google APIs.
However, I was really concerned about the lock in since the Python code
I wrote had to be written in a certain way. The Python 2.5 restriction,
which is now lifted to 2.7, didn't bother me too much. The big thing for me
on GAE was the uncertainty over the eventual production costs (I used the beta
version). Those pricing fears proved to be
&lt;a class="reference external" href="http://www.informationweek.com/news/cloud-computing/platform/231600672"&gt;an issue&lt;/a&gt; for developers that went full-on in the platform. I'm glad I got out
when I did before production GAE went live.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://gondor.io/"&gt;Gondor&lt;/a&gt; seemed interesting, but I really only
played with the beta. I was concerned that they were too small to really be
a player in the field and
I didn't want to get locked to their platform. On the plus side, there really
wasn't much code modification necessary to deploy a Django project.&lt;/p&gt;
&lt;p&gt;Heroku is a great platform - assuming you work within the boundaries. I found
the shared database performance very limited. The performance was often
an order of magnitude worse than on a very small private VPS with PostgreSQL.
However the ease of deployment was fantastic. &amp;quot;git push heroku master&amp;quot; felt
just as natural as interacting with Github all day. I could easily see
getting into the workflow where the only platform a developer uses is
Heroku. The dedicated database cost did scare me though. If there were a
lower cost, $50/month instance, that might help. I'd have to do more
research at that point to do a cost/benefit analysis over AWS or a VPS.&lt;/p&gt;
&lt;p&gt;There's no silver bullet for Python developers looking to deploy on a PaaS.
Still, it's great to have options. For prototyping apps, Gondor and Heroku
make great choices (as long as you don't immediately need a lot of database
storage and performance). For production apps though, I still lean towards a
mix of AWS and virtual private servers.&lt;/p&gt;
</summary></entry><entry><title>Repository Structure and Python</title><link href="http://www.mattmakai.com/repository-structure-and-python.html" rel="alternate"></link><updated>2012-04-18T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/repository-structure-and-python.html</id><summary type="html">&lt;p&gt;Kenneth Reitz has another great post on how to
&lt;a class="reference external" href="http://kennethreitz.com/repository-structure-and-python.html"&gt;structure repositories for Python projects&lt;/a&gt;. Repository structure is one of those topics
that everyone seems to come up with a slightly different way of doing so
it's great to see some direction from a leader in the Python field.&lt;/p&gt;
</summary></entry><entry><title>Django Nudge (django-nudge)</title><link href="http://www.mattmakai.com/django-nudge.html" rel="alternate"></link><updated>2012-04-17T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/django-nudge.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/cfpb/django-nudge"&gt;Django Nudge&lt;/a&gt; (nudge) is an open
source Django application written by developers at the Consumer Financial
Protection Bureau. Nudge is designed to be the Django equivalent to Ramp
for WordPress.&lt;/p&gt;
&lt;p&gt;In a nutshell, Nudge allows content creators to develop their content on
a staging server. When the content is ready to go to production, Nudge
provides an admin interface for selecting only the pieces of content that
should be pushed to production. Nudge allows fine-grained control of which
content to push because not all content needs to go live at the same time.&lt;/p&gt;
&lt;p&gt;Considering how often Django is used in media companies, I was surprised
that I could not find another project that was equivalent to Nudge.
It's completely possible that this type of app has already been written
but never open sourced.&lt;/p&gt;
&lt;p&gt;Which brings me to another point: it's great to see the government open
source useful projects. When developers are thinking &amp;quot;hey this code will
actually see the light of day&amp;quot; there is a lot of motivation to get it
done right. Too often when I've consulted for other government
agencies so many corners are cut partially because developers know
that their project will never go to production or be open sourced.&lt;/p&gt;
&lt;p&gt;It's also great to see the &lt;a class="reference external" href="http://techcrunch.com/2012/04/09/u-s-consumer-financial-protection-bureau-gets-open-source-publishes-on-github/"&gt;positive press&lt;/a&gt;
and &lt;a class="reference external" href="http://radar.oreilly.com/2012/04/open-source-government-cfpb.html"&gt;recognition&lt;/a&gt; that CFPB received for being a forward-thinking government agency.&lt;/p&gt;
&lt;p&gt;We need more of this great work coming from the government. Let's hope
other agencies take note.&lt;/p&gt;
</summary></entry><entry><title>Django in Production</title><link href="http://www.mattmakai.com/django-in-production.html" rel="alternate"></link><updated>2012-04-16T00:00:00-04:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/django-in-production.html</id><summary type="html">&lt;p&gt;Django is easy to get started with, especially if you already have a
programming background in a &amp;quot;heavier&amp;quot; language like Java. When I first
started creating websites with Django 0.96, I was programming Java systems
during the day and relaxed in the evenings by using Python/Django. I found
the speed at which I could create sites allowed me to feel like I was
accomplishing something even though I did not have full days to focus on
side project development.&lt;/p&gt;
&lt;p&gt;One of the hurdles I found with Django was just figuring out how to deploy
the projects to a production server. &amp;quot;python manage.py runserver&amp;quot; wasn't
going to cut it. In addition, once I got the sites live, I was not sure
of how to properly monitor them. The following links helped me a lot to
learn what the &amp;quot;big boys&amp;quot; in the Django space were using in production:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://f.souza.cc/2011/11/setting-up-a-django-production-environment-compiling-and-configuring-nginx/"&gt;Setting up a Production Django Environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://instagram-engineering.tumblr.com/post/20541814340/keeping-instagram-up-with-over-a-million-new-users-in"&gt;Instagram Production Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://tech.yipit.com/2011/12/15/introducing-xenia-smart-monitoring-of-custom-application-level-metrics/"&gt;Yipit Monitoring Key Metrics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.robgolding.com/blog/2011/11/12/django-in-production-part-1---the-stack/"&gt;Django in Production - Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.sparklewise.com/django-settings-for-production-and-development-best-practices/"&gt;Django Settings for Production and Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://adrian.org.ar/python/automatic-setup-of-django-nginx-and-gunicorn-on-ec2"&gt;Automatic Set Up of Django With nginx &amp;amp; gunicorn&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Those are the best articles I've come across recently that I wish I had when
I first started deploying Django projects (to be fair, those links didn't
yet exist nor did many of the technologies that are now commonplace).&lt;/p&gt;
</summary></entry><entry><title>Site Relaunch</title><link href="http://www.mattmakai.com/matt-makai-dot-com-site-relaunch.html" rel="alternate"></link><updated>2012-03-10T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/matt-makai-dot-com-site-relaunch.html</id><summary type="html">&lt;p&gt;I recreated mattmakai.com earlier this year with a new theme on top of
a custom Python/Django stack I wrote. Although I liked some of the
work I did, I just
was not satisfied with the overall result. So I'm relaunching the blog
with the core written in Markdown and jinja2 with
&lt;a class="reference external" href="http://pelican.readthedocs.org/en/2.8/index.html"&gt;Pelican&lt;/a&gt; used to
generate the static HTML pages.&lt;/p&gt;
&lt;p&gt;I'm also
&lt;a class="reference external" href="http://www.github.com/makaimc/matt-makai-static-blog"&gt;open sourcing&lt;/a&gt;
the code and content for anyone else interested in creating their
own Pelican-driven blog.&lt;/p&gt;
</summary></entry><entry><title>&amp;quot;DevOps is Ruining My Craft&amp;quot;</title><link href="http://www.mattmakai.com/devops-ruining-my-craft.html" rel="alternate"></link><updated>2012-02-23T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/devops-ruining-my-craft.html</id><summary type="html">&lt;p&gt;This &lt;a class="reference external" href="http://tatiyants.com/devops-is-ruining-my-craft/"&gt;DevOps blog post&lt;/a&gt; is a great satirical take on the automation and DevOps movement. The post is written as an &amp;quot;interview&amp;quot; with a current sysadmin and it's definitely worth the quick read.&lt;/p&gt;
</summary></entry><entry><title>Python Context Managers</title><link href="http://www.mattmakai.com/python-context-managers.html" rel="alternate"></link><updated>2012-02-22T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/python-context-managers.html</id><summary type="html">&lt;p&gt;During my talk to django-district last night, I explained that Django
1.4 drops support for Python 2.4 because the core committers wanted to
use Python's context managers. Python 2.4 would not suffice because
context managers are a &lt;a class="reference external" href="http://www.python.org/dev/peps/pep-0343/"&gt;Python 2.5+ feature&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Someone in the audience asked what a context manager is, and I was annoyed
with myself for not having a clear, concise answer. So to paraphrase the
old saying, now &amp;quot;there's a blog post for that.&amp;quot;&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Python Context Managers&lt;/h2&gt;
&lt;p&gt;A context manager is created syntactically using the 'with' statement.
Here is an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;with open(&amp;quot;example.txt&amp;quot;) as f:
    data = f.read()
    print len(data)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code above opens a file, reads its contents, and prints the length
of the string read from the file. Since we are using the with statement,
the file will always be closed after it is read. This behavior is because
the 'with' statement performs actions on entry (the __enter__ method)
and on exit (the __exit__ method), regardless of how the block of code
exits. See this &lt;a class="reference external" href="http://preshing.com/20110920/the-python-with-statement-by-example"&gt;blog post with a detailed explanation&lt;/a&gt; of the process a context
manager runs through.&lt;/p&gt;
&lt;p&gt;The context manager essentially can be thought of as an alternative to a try-finally block (before context managers these blocks were more common). So the concise way of explaining a context manager is that it is a statement that defines the runtime context for how a block of code should be executed. Context managers are particularly useful for locking/unlocking as well as setting or reseting state before a code block is executed.&lt;/p&gt;
&lt;div class="section" id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;[1] &lt;a class="reference external" href="http://preshing.com/20110920/the-python-with-statement-by-example"&gt;http://preshing.com/20110920/the-python-with-statement-by-example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2] &lt;a class="reference external" href="http://effbot.org/zone/python-with-statement.htm"&gt;http://effbot.org/zone/python-with-statement.htm&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Django 1.4 Beta Released</title><link href="http://www.mattmakai.com/django-1-4-beta-released.html" rel="alternate"></link><updated>2012-02-16T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/django-1-4-beta-released.html</id><summary type="html">&lt;p&gt;The Django 1.4 beta release is &lt;a class="reference external" href="https://www.djangoproject.com/weblog/2012/feb/15/14-beta-1/"&gt;now available&lt;/a&gt; for testing.&lt;/p&gt;
&lt;p&gt;Although the 1.4 beta can be &lt;a class="reference external" href="https://www.djangoproject.com/download/"&gt;downloaded as a package&lt;/a&gt;, it's probably best to get it from the SVN development branch (also mirrored on github) so you can update and take advantage of bug fixes as they are incorporated into the code base.&lt;/p&gt;
&lt;p&gt;For more information on the new features coming in 1.4, come see &lt;a class="reference external" href="http://www.mattmakai.com/blog/django-district-feb-meetup-lightning-talk/"&gt;my talk on Tuesday night's Django District meetup in DC&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>Django District February Meetup Lightning Talk</title><link href="http://www.mattmakai.com/django-district-feb-meetup-lightning-talk.html" rel="alternate"></link><updated>2012-02-15T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/django-district-feb-meetup-lightning-talk.html</id><summary type="html">&lt;p&gt;I'll be giving a 10 minute lightning talk on updates and incompatibilities in
the upcoming &lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/releases/1.4/"&gt;Django 1.4 release&lt;/a&gt;. If you're interested in Python/Django and want to hear more,
&lt;a class="reference external" href="http://www.django-district.org/events/48873672/"&gt;RSVP on meetup.com&lt;/a&gt;.
There will be some other great talks as well on EC2 + github integration,
monitoring your apps with Graphite and Sentry, and Django chartit.&lt;/p&gt;
&lt;p&gt;My impress.js slides for the talk will be posted on this site over the weekend.&lt;/p&gt;
</summary></entry><entry><title>Django 1.4 Requires Python 2.5+</title><link href="http://www.mattmakai.com/django-1-4-requires-python-2-5.html" rel="alternate"></link><updated>2012-01-25T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/django-1-4-requires-python-2-5.html</id><summary type="html">&lt;p&gt;Django 1.4 is the first Django release to
&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/releases/1.4/#backwards-incompatible-changes-in-1-4"&gt;remove support for Python 2.4&lt;/a&gt;. This change is an expected
for two reasons. First, beginning with Django 1.2, Python 2.3 support
was dropped and the community was notified that Django 1.4 would again
increment the required Python version. Second, the Django core
developers need &lt;a class="reference external" href="http://mmakai.com/post/8732320824/django-1-4-and-beyond"&gt;support for context managers&lt;/a&gt;, which were added in Python 2.5.&lt;/p&gt;
&lt;p&gt;Note that although Django 1.4 supports Python 2.5+, it does not
yet support Python 3.x. Although progress has been made porting Django
to Python 3.x, it is not fully tested or ready for release as specified
in Django's release process.&lt;/p&gt;
</summary></entry><entry><title>What the Django's ORM Author Hates About It</title><link href="http://www.mattmakai.com/what-author-django-orm-hates-about-it.html" rel="alternate"></link><updated>2012-01-20T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/what-author-django-orm-hates-about-it.html</id><summary type="html">&lt;p&gt;Alex Gaynor, a Django core committer and author of much of the
object-relational mapping (ORM) code,
&lt;a class="reference external" href="http://speakerdeck.com/u/alex/p/why-i-hate-the-django-orm"&gt;gave a presentation&lt;/a&gt; on what he hates about the mapping layer. Every ORM layer in
existence has issues, especially for edge cases, but Django's has
been criticized lately for
&lt;a class="reference external" href="http://www.nitinh.com/2009/02/why-django-orm-sucks-it-takes-a-hell-lot-of-memory-in-processing/"&gt;various&lt;/a&gt;
&lt;a class="reference external" href="http://jeffcroft.com/blog/2008/jul/25/top-ten-things-suck-about-django-revisited/"&gt;reasons&lt;/a&gt;.
Alex's presentation addresses concerns are in three areas of the ORM layer:&lt;/p&gt;
&lt;p&gt;1. Inconsistencies in querying syntax are confusing and were
built up without an overall strategy over time&lt;/p&gt;
&lt;p&gt;2. Complex queries are virtually impossible with the existing syntax,
especially compared to SQLAlchemy&lt;/p&gt;
&lt;p&gt;3. Aggregation queries take strings instead of objects, which is
inconsistent with other query types and limits the aggregation
queries' usefulness&lt;/p&gt;
&lt;p&gt;Alex's point during the presentation is to bring up the most glaring issues,
show why they need to be fixed in future Django releases, and move the
Django ORM from an &amp;quot;80/20&amp;quot; solution closer to a &amp;quot;90/10&amp;quot; solution that
is easier to apply across a broader set of use cases.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://speakerdeck.com/u/alex/p/why-i-hate-the-django-orm"&gt;Why I hate the Django ORM&lt;/a&gt; (Speaker Deck)&lt;/p&gt;
</summary></entry><entry><title>The Seven Steps</title><link href="http://www.mattmakai.com/the-seven-steps.html" rel="alternate"></link><updated>2012-01-18T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/the-seven-steps.html</id><summary type="html">&lt;p&gt;There are at least seven distinct steps towards Internet entrepreneurship.
I'll begin with the caveat that these seven steps only apply in the
Internet space and not other avenues such as starting a bakery.
From my (limited) experience, everyone goes through these steps in
order. Some steps take hours, while others can take years.&lt;/p&gt;
&lt;p&gt;The seven steps are:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Putting something online through a platform such as Tumblr, spreading
the word, receiving critical feedback, and improving your work&lt;/li&gt;
&lt;li&gt;Building and putting out any type of website of your own creation&lt;/li&gt;
&lt;li&gt;Building a site conceived from your own idea with potential
for monetization&lt;/li&gt;
&lt;li&gt;Launching your first web application with a sign up process and
methods for payments&lt;/li&gt;
&lt;li&gt;Getting your first paying customer, obtaining feedback, and
improving your product&lt;/li&gt;
&lt;li&gt;Having a steady stream of customers&lt;/li&gt;
&lt;li&gt;Becoming profitable, growing your customer base, and increasing
your product's value to your customers&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By understanding these seven steps, you can assess your own position
and determine how you can take the next step. The goal
is not to rush through each step to get to the next one, but instead
to learn at each milestone. Become comfortable with yourself, your
own skills, and determine what aspects you need to improve.&lt;/p&gt;
&lt;p&gt;For example, I created many sites with Python and Django in 2009. I
designed, developed, and deployed them, learning a lot about
Django's best practices and Linux system administration in the
process. However, I realized I had (and still have to some extent)
a deficiency in design. I knew that before I could take the next
step towards building a site that could be monetized and feel good
about it, I needed to learn better design and get to know more
people who could give me honest, critical feedback on my website designs.&lt;/p&gt;
&lt;p&gt;Once I spent several months reading, drawing, building, and
discussing designs, I felt more comfortable that I could take the
next step. About six months and a lot of late nights later, I
launched &lt;a class="reference external" href="https://www.proofdriven.com/"&gt;ProofDriven&lt;/a&gt; with a
reasonable design I was okay starting with that I knew I could
improve as I grow more comfortable in this step. Eventually I
can look ahead to the next step in the path towards Internet
entrepreneurship.&lt;/p&gt;
</summary></entry><entry><title>Specify the HTML File for PhoneGap and iOS</title><link href="http://www.mattmakai.com/specify-html-file-phonegap-ios.html" rel="alternate"></link><updated>2012-01-05T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/specify-html-file-phonegap-ios.html</id><summary type="html">&lt;p&gt;When working with iOS applications and using PhoneGap, you'll often want to use a different
file name than &amp;quot;index.html&amp;quot; for your first page. This can be tricky for first time
PhoneGap/iOS developers because there is no stub function or properties file for
specifying the file like there is in Android and BlackBerry projects.&lt;/p&gt;
&lt;p&gt;In your AppDelegate.m file, add the following method and change the return value to the
HTML file you want to use.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;+ (NSString*) startPage
{
  return @&amp;quot;different.html&amp;quot;;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Bonus: you can also use this to specify a different path than www. For example, if
you have a combined Android and iOS project where Android requires the assets directory,
specify &amp;quot;../assets/www/yourfile.html&amp;quot; as the return value.&lt;/p&gt;
</summary></entry><entry><title>Heroku on Ubuntu 10.04</title><link href="http://www.mattmakai.com/heroku-ubuntu-10-04.html" rel="alternate"></link><updated>2012-01-03T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/heroku-ubuntu-10-04.html</id><summary type="html">&lt;p&gt;A couple of guys from Heroku gave a talk tonight at DC Python and it looked like a good
solution for running small sites. However, I was disappointed that set up was more
difficult on Ubuntu 10.04 than turn key installers on Windows and Mac OS X. The set
up &lt;a class="reference external" href="http://toolbelt.herokuapp.com/linux/readme"&gt;instructions&lt;/a&gt; required a few
modifications to work properly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-add-repository &amp;#39;deb http://toolbelt.herokuapp.com/ubuntu ./&amp;#39;
curl https://toolbelt.herokuapp.com/apt/release.key | sudo apt-key add -
sudo apt-get update
sudo apt-get install heroku-toolbelt
sudo apt-get install ruby libopenssl-ruby ruby1.8-dev
sudo apt-get install libreadline-ruby
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Type &amp;quot;heroku&amp;quot; at the command line to check that the installation is working properly.&lt;/p&gt;
&lt;p&gt;Sources:&lt;/p&gt;
&lt;p&gt;[1] &lt;a class="reference external" href="http://wmilesn.com/2011/10/code/avoiding-pitfalls-when-setting-up-heroku-for-node-js-on-ubuntu/"&gt;http://wmilesn.com/2011/10/code/avoiding-pitfalls-when-setting-up-heroku-for-node-js-on-ubuntu/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2] &lt;a class="reference external" href="http://rukuro-blog.heroku.com/2011/05/11/ruby-readline-loaderror"&gt;http://rukuro-blog.heroku.com/2011/05/11/ruby-readline-loaderror&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Impress.js: Now Works With Presentation Pointers</title><link href="http://www.mattmakai.com/impress-js-works-with-presentation-pointers.html" rel="alternate"></link><updated>2012-01-02T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/impress-js-works-with-presentation-pointers.html</id><summary type="html">&lt;p&gt;I saw &lt;a class="reference external" href="https://github.com/bartaz/impress.js"&gt;impress.js&lt;/a&gt;, a really cool CSS3
transformation-based presentation Javascript library on Hacker News yesterday.
The &lt;a class="reference external" href="http://bartaz.github.com/impress.js/"&gt;demo&lt;/a&gt; is flashy - similar to Prezi
but without Flash, plus new 3D effects. The only downside compared to an
established browser slideshow library such as &lt;a class="reference external" href="https://github.com/geraldb/s6"&gt;S6&lt;/a&gt; was
that my Logitech presentation pointer didn't work for advancing and reversing the slides.&lt;/p&gt;
&lt;p&gt;After a little digging, I found out that presentation pointers emulate page up/down
key strokes. So I &lt;a class="reference external" href="https://github.com/makaimc/impress.js"&gt;forked the impress.js&lt;/a&gt;
library, updated the code, and issued a
&lt;a class="reference external" href="https://github.com/bartaz/impress.js/pull/15"&gt;pull request&lt;/a&gt; to add the presentation
pointer capability. Thanks to &lt;a class="reference external" href="https://github.com/bartaz"&gt;Bartek&lt;/a&gt;'s quick response,
the pull request was merged and closed just a few hours later. So now
presentation pointers work great with impress.js.&lt;/p&gt;
</summary></entry><entry><title>New Blog</title><link href="http://www.mattmakai.com/new-blog.html" rel="alternate"></link><updated>2012-01-01T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/new-blog.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;strong&gt;This post is outdated&lt;/strong&gt; because I am
&lt;a class="reference external" href="/matt-makai-dot-com-site-relaunch.html"&gt;already on a new blog platform&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To kick off 2012, I'm shifting my technical blog from Tumblr to my own platform.&lt;/p&gt;
&lt;p&gt;I created this site with &lt;a class="reference external" href="http://python.org/"&gt;Python&lt;/a&gt;,
&lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;,
&lt;a class="reference external" href="http://www.mysql.com/"&gt;MySQL&lt;/a&gt;, and
&lt;a class="reference external" href="http://twitter.github.com/bootstrap/"&gt;Twitter Bootstrap&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The site is hosted on a Linux &lt;a class="reference external" href="http://www.linode.com/"&gt;Linode&lt;/a&gt; instance and runs
on &lt;a class="reference external" href="http://nginx.org/"&gt;nginx&lt;/a&gt; and
&lt;a class="reference external" href="http://gunicorn.org/"&gt;Green Unicorn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once 2012 kicks off, I will add my presentations and (potentially) screencasts on technical content.&lt;/p&gt;
</summary></entry><entry><title>Older Blog Posts</title><link href="http://www.mattmakai.com/older-blog-posts.html" rel="alternate"></link><updated>2012-01-01T00:00:00-05:00</updated><author><name>Matt Makai</name></author><id>http://www.mattmakai.com/older-blog-posts.html</id><summary type="html">&lt;p&gt;My blog posts from the last couple of years can still be access at
&lt;a class="reference external" href="http://mmakai.com/"&gt;http://mmakai.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Eventually I'll transfer the posts' content to this site and redirect the URLs to
their new locations, but for now I'm leaving the old posts on Tumblr.
There is also a nice way to browse the posts in the
&lt;a class="reference external" href="http://mmakai.com/archive/"&gt;archive&lt;/a&gt;.&lt;/p&gt;
</summary></entry></feed>